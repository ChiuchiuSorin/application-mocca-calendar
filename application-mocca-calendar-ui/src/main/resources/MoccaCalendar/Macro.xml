<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>MoccaCalendar</web>
  <name>Macro</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1379057815000</creationDate>
  <parent>MoccaCalendar.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1391971971000</date>
  <contentUpdateDate>1391971971000</contentUpdateDate>
  <version>1.1</version>
  <title>Calendar Macro</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>Example usage:

{{code}}

{{moccacalendar /}}

or

{{moccacalendar filter="space" /}}

or

{{moccacalendar filter="wiki" /}}
{{/code}}

{{moccacalendar filter="wiki"/}}
</content>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>f8f9ab2d-9632-4662-af2b-e53db70f9191</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'fullcalendar'], function(jQuery, fullCalendar) {

// Make sure the XWiki 'namespace' and the ModalPopup class exist.
if (typeof(XWiki) == "undefined" || typeof(XWiki.widgets) == "undefined" || typeof(XWiki.widgets.ModalPopup) == "undefined") {
  if (typeof console != "undefined" &amp;&amp; typeof console.warn == "function") {
    console.warn("[MessageBox widget] Required class missing: XWiki.widgets.ModalPopup");
  }
} else {
  if (typeof(XWiki.MoccaCalendar) == "undefined") {
    XWiki.MoccaCalendar = {};
  }

#template('colorThemeInit.vm')
#set ($discard = $services.localization.use('document', 'MoccaCalendar.MoccaCalendarTranslations'))

  XWiki.MoccaCalendar.Helper = Class.create({
  initialize: function(calendar, jsonServiceUrl, createEventBaseUrl, updateEventUrl, editEventUrlTemplate) {
    this.calendar = calendar,
    this.jsonServiceUrl = jsonServiceUrl;
    this.createEventBaseUrl = createEventBaseUrl;
    this.updateEventUrl = updateEventUrl;
    this.editEventUrlTemplate = editEventUrlTemplate;
  },
  displayError: function(errorMessage) {
    if (!errorMessage) {
      errorMessage = "$services.localization.render('MoccaCalendar.generic.errormessage')";
    }
    new XWiki.widgets.Notification("$services.localization.render('core.widgets.confirmationBox.notification.failed')" + errorMessage, "error");
  },
  showCreateEventFrom: function(start, end, dateFormat) {
    var calendar = this.calendar;
    var allDay = !start.hasTime();
    var mySimpleDateFormatter = new Externals.SimpleDateFormat(dateFormat);
    start = mySimpleDateFormatter.format(start.toDate());
    end = mySimpleDateFormatter.format(end.toDate());
    var paramPrefix = "MoccaCalendar.MoccaCalendarEventClass_0_";
    var params = "&amp;" + paramPrefix + "startDate=" + encodeURIComponent(start);
    params += "&amp;" + paramPrefix + "endDate=" + encodeURIComponent(end);
    params += "&amp;" + paramPrefix + "allDay=" + allDay;
    return this.showCreateEvent(params);
  },
  showCreateEvent: function(extraParams) {
    var params = extraParams || '';
    return new XWiki.MoccaCalendar.MoccaCalendarPopup({pageURL: this.createEventBaseUrl + params}, this);
  },
  updateEvent: function(page, isResize, delta, startDate, endDate, revertFunc) {
    var savingBox = new XWiki.widgets.Notification("$services.localization.render('core.widgets.confirmationBox.notification.inProgress')", "inprogress", {inactive: true});
    var savedBox = new XWiki.widgets.Notification("$services.localization.render('core.widgets.confirmationBox.notification.done')", "done", {inactive: true});
    var calendar = this.calendar;

    savingBox.show();
    savedBox.hide();

    // let's call the calendar update
    var params = "page=" +  encodeURIComponent(page) + "&amp;isResize=" + (isResize ? "1" : "0") + "&amp;delta=" + delta.asMilliseconds() + "&amp;startDate=" + startDate.format()
    if (endDate) { params += "&amp;endDate=" + endDate.format(); }
    params += "&amp;allDay=" + (startDate.hasTime()?"":"1");
    var url = this.updateEventUrl + params;
    jQuery.ajax(url).fail(function (data) {
      savingBox.hide();
      this.displayError();
      if (revertFunc) revertFunc();
    }.bind(this)).success(function (data) {
      if (data.indexOf("OK ")==0) {
        savingBox.hide();
        savedBox.show();
        calendar.fullCalendar('refetchEvents');
      } else {
        savingBox.hide();
        this.displayError();
        if (revertFunc) revertFunc();
      }
    }.bind(this));
  }
  });

  // 
  // "static" helpers
  //
  XWiki.MoccaCalendar.Helper.getCalendarView = function(defaultVal) {
    var cookieName = 'MoccaCalendar_view=';
    if (document.cookie) {
      var ca = document.cookie.split(';');
      for(var i=0;i&lt;ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(cookieName) == 0) return c.substring(cookieName.length,c.length);
      }
    }
    return defaultVal;
  };

  XWiki.MoccaCalendar.Helper.setCalendarView = function(value) {
    var cookieName = 'MoccaCalendar_view=';
    document.cookie = cookieName + value + "; path=/";
  };

  //
  // the dialog to show / edit events
  //
  XWiki.MoccaCalendar.MoccaCalendarPopup = Class.create(XWiki.widgets.ModalPopup, {
    defaultInteractionParameters: {
      editMode : true,
      isNew : true
    },
    initialize: function($super, interactionParameters, helper) {
      this.interactionParameters = Object.extend(Object.clone(this.defaultInteractionParameters), interactionParameters || {});
      this.helper = helper;
      // call constructor from ModalPopup with params content, shortcuts, options
      $super(
        // this element will end up as this.content
        new Element('form', {'class' : 'xform'}),
        {
          "show": {method: this.showDialog, keys: []},
          "close": {method: this.closeDialog, keys: ['Esc']}
        },
        {
          verticalPosition: "top",
          backgroundColor: "$theme.pageHeaderBackgroundColor",
          title : this.interactionParameters.editMode ? "$services.localization.render('MoccaCalendar.calendarevent.create')" : "$services.localization.render('MoccaCalendar.calendarevent.view')"
        }
      );
      this.loadEventContent();
      this.showDialog();

      $$(".xdialog-modal-container").each(function(div) { div.setStyle({position: 'absolute'}) }); // MOCCACAL-32

      this.savingBox = new XWiki.widgets.Notification("$services.localization.render('core.widgets.confirmationBox.notification.inProgress')", "inprogress", {inactive: true});
      this.savedBox = new XWiki.widgets.Notification("$services.localization.render('core.widgets.confirmationBox.notification.done')", "done", {inactive: true});
      this.savingBox.hide();
      this.savedBox.hide();
    },

    loadEditForm: function(e) {
      this.interactionParameters.pageURL = this.interactionParameters.pageURL.replace(/view/,'edit');
      this.interactionParameters.editMode = true;
      this.loadEventContent();
    },

    submitForm: function(e) {
      e.preventDefault();
      var titleField = this.content.down('[name="title"]');

      var title = $(titleField).getValue();
      if (title.length == 0) {
        $$(".val_title_notempty").each(Element.show);
        return false;
      }
      else {
        $$(".val_title_notempty").each(Element.hide);
      }

      this.savedBox.hide();
      this.savingBox.show();

      if (this.interactionParameters.isNew) {
       // calculate "automatic" document name:
       var name = title.replace(/[\/?]/g,'').replace(/^ +/,'').replace(/ +$/,'');

       // ask the JSONService to create an unused event name for us      
       new Ajax.Request( this.helper.jsonServiceUrl, {
        method: 'get',
        parameters: { 'outputSyntax': 'plain', 'newEvent' : name },
        onSuccess: function(response) {
          try {
            var error = (response.responseJSON)?response.responseJSON['error']:"$services.localization.render('MoccaCalendar.generic.errormessage')";
            if (error) {
              this.savingBox.hide();
              this.helper.displayError(error);
            } else {
              var eventName = response.responseJSON['name'];
              this.saveEvent(eventName);
            }
          } catch(e) { alert(e); }
        }.bind(this),
        onFailure: function(response) {
          // this should not happen ...
          try {
            this.savingBox.hide();
            this.helper.displayError();
          } catch(e) { alert(e); }
        }.bind(this)
       });
      } else {
        this.saveEvent();
      }
      
      return false;
    },

    saveEvent: function(newEventName) {
      if (newEventName) {
        this.content.writeAttribute('action', this.helper.editEventUrlTemplate.replace("__page__", encodeURIComponent(newEventName)));
      } else {
        this.content.writeAttribute('action', this.interactionParameters.pageURL.replace(/edit/,'save'));
      }
      this.content.request({
        onSuccess: function() {
          this.savingBox.hide();
          this.savedBox.show();
          this.closeDialog();
          this.helper.calendar.fullCalendar('refetchEvents');
        }.bind(this),
        onFailure: function(e) {
          try {
            var responseText = e.responseText;
            $("formcontent").innerHTML = responseText;
            this.savingBox.hide();
            this.helper.displayError();
            $$('input.datetime').each(function(dateTimeInput) {
              new XWiki.DateTimePicker(dateTimeInput, dateTimeInput.title);
            });
          } catch (e) {
            alert('Failed to save event!');
          }
        }.bind(this)
      })

    },

    loadEventContent: function() {
      // get page content for the pageURL
      new Ajax.Request(this.interactionParameters.pageURL, {
        method: 'get',
        onSuccess: function(transport) {
          if (transport.status == 0) {
            return;
          }
          var response = transport.responseText || "no response text";
          var old = $('formcontent');
          if (old) {
            old.purge();
            old.remove();
          }
          this.content.insert('&lt;div id="formcontent"&gt;' + response + '&lt;/div&gt;');
          var formcontent = $('formcontent');
          var buttons = new Element('div', {'class':'buttons'});
          formcontent.insert(buttons);
          if (this.interactionParameters.editMode) {
            buttons.insert(this.createButton("submit","$services.localization.render('save')","","save-moccacalendar-event"));
            $$('input.datetime').each(function(dateTimeInput) {
              new XWiki.DateTimePicker(dateTimeInput, dateTimeInput.title);
            });
            buttons.down('#save-moccacalendar-event').observe('click', this.submitForm.bind(this));
          } else {
            buttons.insert(this.createButton("button","$services.localization.render('edit')","","edit-moccacalendar-event"));
            buttons.down('#edit-moccacalendar-event').observe('click', this.loadEditForm.bind(this));
          }
        }.bind(this),
        onFailure: function() {
          this.content.insert('Something went wrong...');
        }.bind(this)
      });
    }
  });


  //
  // the "agenda" view
  //
  // what we do here is mock up a custom fullCalender view by implementing an undocumented interface
  // and we even do this by "duck-typing" as the base "View" class in private to full calendar 
  var PlainList = function(calendar) {
    this.name = 'plainList';
    this.calendar = calendar;
    // Note: this.el is set by the calling side
  }

  PlainList.prototype = {

    incrementDate: function(date, delta) {
      // we intentionally ignore the date given
      // instead we have only two time windows: "past" (delta == -1) and "future" (anything else)
      date = this.calendar.getNow().clone().stripTime();
      if (delta &lt; 0) {
        date = date.subtract(1, 'd')
      }
      return date;
    },

    destroy: function() {
      this.el.empty();
      this.container = null;
    },
  
    render: function(date) {
      // we sometimes get switched into some date of the other views
      // before being called "incrementDate"
      // normalize it to "past" or "future" first:
      this.start = this.calendar.getNow().clone().stripTime();
      var isPast = date.isBefore(this.start)
      if (isPast) {
        this.start = this.start.subtract(10, 'y');
      }
      this.intervalStart = this.start;
      this.end = this.intervalEnd = this.start.clone().add(10, 'y');
     
      if (isPast) {
        this.title = "$services.localization.render('MoccaCalendar.calendar.plainlist.titlepast')";
        this.noEventMsg = "$services.localization.render('MoccaCalendar.calendar.plainlist.nopastevents')";
      } else {
        this.title = "$services.localization.render('MoccaCalendar.calendar.plainlist.titleupcoming')";
        this.noEventMsg = "$services.localization.render('MoccaCalendar.calendar.plainlist.noupcomingevents')";
      }
      this.el.append('&lt;div class="fc-timeline-box" style="width:100%"/&gt;');
      this.container = jQuery('.fc-timeline-box',this.el);
      this.container.append('&lt;img src="$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')" alt="$services.localization.render('platform.livetable.loading')" /&gt;');
      this.trigger('viewRender', this, this, this.el);
    },
  
    destroyEvents: function() {
      if (this.container) { this.container.empty(); }
    },
  
    renderEvents: function(events) {
      if (events.length==0) {
  	    this.container.append('&lt;p&gt;&lt;/p&gt;');
  	    jQuery('p', this.container).addClass('noevents').text(this.noEventMsg);
  	} else for (var i=0;i&lt;events.length;i++) {
        var ev = events[i];
        this.container.append(ev.html || ev.title)
      }
    },

    // lame: copy from the "View" base class
    trigger: function (name, thisObj) {
      return this.calendar.trigger.apply(
        this.calendar,
        [name, thisObj || this].concat(Array.prototype.slice.call(arguments, 2), [this])
      );
    },

    // resize and drag &amp; drop protocol - no-ops
    updateSize: function(b){
      // console.log('updateSize');
    },
    select: function(start, end) {
      // console.log('select');
    },
    unselect: function() {
      // console.log('unselect');
    },
  
  }; // end PlainList.prototype
  
  jQuery.fullCalendar.views.plainList = PlainList;
  
} // if the XWiki.widgets.ModalPopup  is defined
  
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>39fbab16-bd28-4179-b01b-be606a79f869</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>div.calendar_date_select {
  z-index: 1010;
}
div.moccaevent {
  border-style:solid;
  border-width:0 0 0 5px;
  padding-left: 5px;
}
div.moccaevent h5 {
  margin-bottom: 5px;
}
.dashboard .fc-header {
  font-size: 85%;
}
.dashboard .fc-header .fc-header-title h2 {
  font-size: 1.4em;
}
</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>0</number>
    <className>XWiki.WikiMacroClass</className>
    <guid>c3a17b3d-6af7-4265-bbf0-844451bb73f1</guid>
    <class>
      <name>XWiki.WikiMacroClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>9</number>
        <prettyName>Macro code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentDescription>
        <disabled>0</disabled>
        <name>contentDescription</name>
        <number>8</number>
        <prettyName>Content description (Not applicable for "No content" type)</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </contentDescription>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>7</number>
        <prettyName>Macro content type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Optional|Mandatory|No content</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <defaultCategory>
        <disabled>0</disabled>
        <name>defaultCategory</name>
        <number>4</number>
        <prettyName>Default category</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultCategory>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>3</number>
        <prettyName>Macro description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <id>
        <disabled>0</disabled>
        <name>id</name>
        <number>1</number>
        <prettyName>Macro id</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </id>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Macro name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <supportsInlineMode>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>supportsInlineMode</name>
        <number>5</number>
        <prettyName>Supports inline mode</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </supportsInlineMode>
      <visibility>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>visibility</name>
        <number>6</number>
        <prettyName>Macro visibility</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Current User|Current Wiki|Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </visibility>
    </class>
    <property>
      <code>{{velocity output="false"}}
$services.localization.use('document', 'Calendar.Translations')
$services.localization.use('document', 'MoccaCalendar.MoccaCalendarTranslations')
$xwiki.jsx.use("Calendar.JQuery", {'defer': false, 'minify': false})
$xwiki.jsx.use("Calendar.JQueryUI", {'defer': false, 'minify': false})
$xwiki.jsx.use("Calendar.Moment", {'defer': false, 'minify': false})
$xwiki.jsx.use("Calendar.FullCalendar", {'defer': false, 'minify': false})
$xwiki.jsx.use("MoccaCalendar.Macro", {'defer': false, 'v' : '2.3'})
$xwiki.jsx.use("MoccaCalendar.DatePickerExtension", {'defer': false})
## A simple date picker widget.
$xwiki.ssfx.use('uicomponents/widgets/datepicker/calendarDateSelect.css', true)
$xwiki.jsfx.use('uicomponents/widgets/datepicker/calendarDateSelect.js', true)
## Used to parse and serialize the selected date using the date format specified in the XClass.
$xwiki.jsfx.use('uicomponents/widgets/datepicker/simpleDateFormat.js', true)
## A wrapper over the CalendarDateSelect widget that uses the SimpleDateFormat to parse/serialize the dates.
$xwiki.ssfx.use('uicomponents/widgets/datepicker/dateTimePicker.css', true)
$xwiki.jsfx.use('uicomponents/widgets/datepicker/dateTimePicker.js')
$xwiki.ssx.use("Calendar.FullCalendar")
$xwiki.ssx.use("MoccaCalendar.Macro")
#set($calcounter = $request.getAttribute('MoccaCalendar.Macro:counter'))
#if(!$calcounter) #set($calcounter = 0) #else #set($calcounter = $calcounter + 1) #end
#set($discard = $request.setAttribute('MoccaCalendar.Macro:counter', $calcounter))
#set($filter = $xcontext.macro.params.filter)
#if(!$filter)
#set($filter = 'page') ## possible values are wiki, space, page
#end
#set($calendarDoc = $xcontext.macro.params.calendarDoc)
#if(!$calendarDoc)
#set($calendarDoc = $doc.fullName)
#end
#set($defaultView = $xcontext.macro.params.defaultView)
#if(!$defaultView)
 #set($defaultView = "")
#end
#set($firstDay = $xcontext.macro.params.firstDay)
#if(!$firstDay)
  #set($firstDay = "$services.localization.render('MoccaCalendar.calendar.firstDayOfWeek')")
#end
#set($minTime = $xcontext.macro.params.minTime)
#if(!$minTime)
  #set($minTime = "")
#else
  ## b/w compat:
  #if($minTime.indexOf(':')&lt;0))
    #set($minTime = "$minTime:00")
  #end
#end
#set($maxTime = $xcontext.macro.params.maxTime)
#if(!$maxTime)
  #set($maxTime = "")
#else
  ## b/w compat:
  #if($maxTime.indexOf(':')&lt;0))
    #set($maxTime = "$maxTime:00")
  #end
#end
#set($year = $xcontext.macro.params.year)
#if(!$year)
 #set($year = "")
#end
#set($month = $xcontext.macro.params.month)
#if(!$month)
 #set($month = "")
#end
#set($date = $xcontext.macro.params.date)
#if(!$date)
 #set($date = "")
#end
##
## some hardwired values that you can feel free to customize
##
#set($jsonUrl = $xwiki.getDocument("MoccaCalendar.JSONService").getURL("get"))
#set($updateUrl = $xwiki.getDocument("MoccaCalendar.UpdateService").getURL("get"))
#set($dateFormat =$!xwiki.getClass($classname).get("startDate").getProperty('dateFormat').value)
#if($!dateFormat=="")
  #set($dateFormat ="dd.MM.yyyy HH:mm:ss")
#end
#set($left = "prev,next today")
#set($center = "title")
#set($right = "agendaDay,agendaWeek,month,plainList")

#set($canCreateEvents = $xwiki.hasAccessLevel("edit", $calendarDoc))

{{/velocity}}{{velocity}}#if($xcontext.action=='view'){{html clean="false" wiki="false"}}
#if($canCreateEvents)
## create event link
&lt;span class="buttonwrapper"&gt;
&lt;a href="#" class="button" id="calendar${calcounter}-btn"&gt;$services.localization.render('MoccaCalendar.calendarevent.create')&lt;/a&gt;
&lt;/span&gt;
## end create event link
#end
&lt;div id="calendar${calcounter}"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
require(['jquery'], function(jQuery) {
 jQuery(document).ready(function() {

  var defaultView = XWiki.MoccaCalendar.Helper.getCalendarView("$!escapetool.javascript($defaultView)");

  var defaultEventData = {
    xpage: 'plain',
    outputSyntax: 'plain',
    calendarDoc: "$!escapetool.javascript($calendarDoc)",
    filter: "$!escapetool.javascript($filter)",
    classname: "MoccaCalendar.MoccaCalendarEventClass",
    startfield: "startDate",
    endfield: "endDate",
    durationfield: ""
  };

  // page is now ready, initialize the calendar...
  var calendar = jQuery('#calendar${calcounter}').fullCalendar({
    events: {
      url : "$!escapetool.javascript($jsonUrl)",
      type: 'GET',
      data : function() {
        // as we also get called before the calendar is fully initialized
        // we cannot get the current view reliably from the calendar itself
        // instead use our trusty helper 
        return jQuery.extend(defaultEventData, {'outputView': XWiki.MoccaCalendar.Helper.getCalendarView(defaultView)} );
      },
      error: function() {
        calendarHelper.displayError();        
      },
    },
    eventClick: function(calEvent, jsEvent, view) {
      new XWiki.MoccaCalendar.MoccaCalendarPopup({pageURL: calEvent.url+'&amp;xpage=plain&amp;xhidden=1', editMode: false, isNew: false}, calendarHelper);
      jsEvent.preventDefault();
      return false;
    },
    viewRender: function(view, element) {
      XWiki.MoccaCalendar.Helper.setCalendarView(view.name);
    },
    header: {
      left: "$!escapetool.javascript($left)",
      center: "$!escapetool.javascript($center)",
      right: "$!escapetool.javascript($right)"
    },
    defaultView: defaultView,
#if($year!="")    year: $!escapetool.javascript($year),#end
#if($month!="")   month: $!escapetool.javascript($month), #end
#if($date!="")    date: $!escapetool.javascript($date), #end
    firstDay: $escapetool.javascript($firstDay),
#if($minTime!="")    minTime: "$!escapetool.javascript($minTime)", #end
#if($maxTime!="")    maxTime: "$!escapetool.javascript($maxTime)", #end
    editable: true,
    selectable: true,
    selectHelper: true,
    select: function(start, end, allDay) {
      calendarHelper.showCreateEventFrom(start, end, "$!escapetool.javascript($dateFormat)");
      calendar.fullCalendar('unselect');
    },
    eventDrop: function(event, delta, revertFunc, jsEvent, ui, view) {
      calendarHelper.updateEvent(event.id, false, delta, event.start, event.end, revertFunc);
    },
    eventResize: function(event, delta, revertFunc, jsEvent, ui, view) {
      calendarHelper.updateEvent(event.id, true, delta, event.start, event.end, revertFunc);
    },
    aspectRatio:1.8,
    buttonText: {
      today: '$services.localization.render('xwiki.calendar.button.today')',
      day: '$services.localization.render('xwiki.calendar.button.day')',
      week:'$services.localization.render('xwiki.calendar.button.week')',
      month:'$services.localization.render('xwiki.calendar.button.month')',
      plainList:'$services.localization.render('MoccaCalendar.calendar.plainlist')'
    },
    monthNames: $services.localization.render('xwiki.calendar.monthNames'),
    monthNamesShort: $services.localization.render('xwiki.calendar.monthNamesShort'),
    dayNames: $services.localization.render('xwiki.calendar.dayNames'),
    dayNamesShort: $services.localization.render('xwiki.calendar.dayNamesShort'),
    allDayText: "$services.localization.render('xwiki.calendar.allDayText')",
    axisFormat: "$services.localization.render('xwiki.calendar.axisFormat')",
    timeFormat: "$!services.localization.render('xwiki.calendar.timeFormat')",
    columnFormat: {
      month: "$!services.localization.render('xwiki.calendar.columnFormat.month')",
      week: "$!services.localization.render('xwiki.calendar.columnFormat.week')",
      day: "$!services.localization.render('xwiki.calendar.columnFormat.day')"
    },
    titleFormat: {
      month: "$!services.localization.render('xwiki.calendar.titleFormat.month')",
      week: "$!services.localization.render('xwiki.calendar.titleFormat.week')",
      day: "$!services.localization.render('xwiki.calendar.titleFormat.day')"
    }
  });
  jQuery('#calendar${calcounter}-btn').click( function(e) { calendarHelper.showCreateEvent(); e.preventDefault(); });
  // helper to be used in callback above
#set($pageParams = "template=MoccaCalendar.MoccaCalendarEventTemplate&amp;xhidden=1&amp;parentFROM=${escapetool.url($calendarDoc)}&amp;xpage=plain&amp;form_token=$services.csrf.getToken()&amp;ocalcaction=create")
#set($eventUrlTemplate = $xwiki.getURL($services.model.createDocumentReference($doc.getWiki(),'MoccaCalendar','__page__'),'save',$pageParams))
#set($randomDocUrl = $xwiki.getURL("randomPage${util.generateRandomString(10)}",'edit',$pageParams))
#set($updateUrlParams="?xpage=plain&amp;outputSyntax=plain&amp;calendarDoc=${escapetool.url(${calendarDoc})}&amp;")
  var calendarHelper = new XWiki.MoccaCalendar.Helper(calendar, "$escapetool.javascript($jsonUrl)", "$escapetool.javascript($randomDocUrl)", "$escapetool.javascript("${updateUrl}${updateUrlParams}")", "$escapetool.javascript($eventUrlTemplate)");
 });
});
&lt;/script&gt;
{{/html}}
#else ## of #if($xcontext.action=='view')
Mocca Calendar Macro
#end
{{/velocity}}</code>
    </property>
    <property>
      <contentDescription/>
    </property>
    <property>
      <contentType>No content</contentType>
    </property>
    <property>
      <defaultCategory>Content</defaultCategory>
    </property>
    <property>
      <description>Displays a Calendar</description>
    </property>
    <property>
      <id>moccacalendar</id>
    </property>
    <property>
      <name>Mocca Calendar</name>
    </property>
    <property>
      <supportsInlineMode>0</supportsInlineMode>
    </property>
    <property>
      <visibility>Current Wiki</visibility>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>0</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>2b173925-b2b6-496b-b18f-8a8092663b88</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue>page</defaultValue>
    </property>
    <property>
      <description>Possible values are 'wiki','space' or 'page', where:
 'page': only events which are children pages of this page will be included,
 'space': only events which are in the space of the calendar doc will be included,
 'wiki': all events will be included.</description>
    </property>
    <property>
      <mandatory/>
    </property>
    <property>
      <name>filter</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>1</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>47abb77b-820a-4406-aaba-618116667c32</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>The calendar document whose events are shown (only if filter is set to 'page'). This value is also used as the default calendar to create new events for. If missing, the current document is used.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>calendarDoc</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>2</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>b87943f2-eeba-4d00-94e5-2ca115bb7332</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue>month</defaultValue>
    </property>
    <property>
      <description>The initial way the calendar is displayed; can be changed by the user. Possible values are: 'month', 'agendaWeek', 'agendaDay' or 'plainList'</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>defaultView</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>3</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>d07837c6-fa51-4eac-a1b0-a79aab60511e</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>First day (from 0 being Sunday to 6 being Monday) of the week to show in the calendar. Leave empty for Monday</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>firstDay</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>4</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>77d5c912-4d56-452d-a4f6-f4eabc42c52c</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue>8:00</defaultValue>
    </property>
    <property>
      <description>First time to show in the calendar. Users won't see hours before this time. Leave empty for default (8:00)
</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>minTime</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>5</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>1bf587c1-14b2-4b51-b1f4-babbf1d13ecf</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue>23:00</defaultValue>
    </property>
    <property>
      <description>Last time to show in the calendar. Users won't see hours after this time. Leave empty for default (23:00)
</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>maxTime</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>6</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>b6bb2e26-07c8-4b87-a628-e9f3d59faf0f</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Year of the date to show when loading the calendar. Leave empty for today
</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>year</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>7</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>b42462f5-12d3-4775-a2e5-feccc98532ab</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Month (from 0 to 11) of the date to show when loading the calendar. Leave empty for today
</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>month</name>
    </property>
  </object>
  <object>
    <name>MoccaCalendar.Macro</name>
    <number>8</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>3f0c549b-6617-4e17-965c-b9b7586dc47d</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Day (from 1 to 31) of the date to show when loading the calendar. Leave empty for today
</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>date</name>
    </property>
  </object>
</xwikidoc>
